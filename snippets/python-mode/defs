# -*- coding: utf-8 -*-
# name: defs
# contributor: Yasser Gonz¨¢lez Fern¨¢ndez <yglez@uh.cu>
# contributor: s9gf4ult
# --
def set_${1:name}(self, ${1:$(format "%s" text)}):
    """${1:$(format "\\\\brief Setter for property %s" text)}
    ${1:$
    (let* ((indent
            (concat "\n" (make-string (current-column) 32)))
           (args
            (mapconcat
             '(lambda (x)
                (if (not (string= (nth 0 x) ""))
                    (concat "\\\\param " (nth 0 x) )))
             (mapcar
              '(lambda (x)
                 (mapcar
                  '(lambda (x)
                     (replace-regexp-in-string "[[:blank:]]*$" ""
                      (replace-regexp-in-string "^[[:blank:]]*" "" x)))
                  x))
              (mapcar '(lambda (x) (split-string x "="))
                      (split-string text ",")))
             indent)))
      (if (string= args "")
          (make-string 3 34)
        (mapconcat
         'identity
         (list args (make-string 3 34))
         indent)))
    }
    ${1:$(format "self._%s = %s" text text)}
    $0